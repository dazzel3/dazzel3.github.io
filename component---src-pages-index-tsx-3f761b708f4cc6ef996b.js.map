{"version":3,"file":"component---src-pages-index-tsx-3f761b708f4cc6ef996b.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/main/CategoryList.tsx","webpack://gatsby-starter-default/./src/components/main/PostItem.tsx","webpack://gatsby-starter-default/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-starter-default/./src/components/main/PostList.tsx","webpack://gatsby-starter-default/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-default/./node_modules/split-on-first/index.js","webpack://gatsby-starter-default/./node_modules/filter-obj/index.js","webpack://gatsby-starter-default/./node_modules/query-string/base.js","webpack://gatsby-starter-default/./node_modules/query-string/index.js","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport React from 'react';\nimport LinkButton from 'components/common/LinkButton';\nimport { LIGHT_COLOR } from 'utils/color';\n\nexport interface CategoryListProps {\n  selectedCategory: string;\n  categoryList: {\n    [key: string]: number;\n  };\n}\n\nconst CategoryList = ({\n  selectedCategory,\n  categoryList,\n}: CategoryListProps) => {\n  return (\n    <Container>\n      <Wrapper>\n        {Object.entries(categoryList).map(([name, count]) => (\n          <CategoryItem>\n            <LinkButton\n              to={`/?category=${encodeURI(name)}`}\n              active={name === selectedCategory}\n              key={name}\n            >\n              {name}\n            </LinkButton>\n          </CategoryItem>\n        ))}\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default CategoryList;\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 1.5rem;\n`;\n\nconst Wrapper = styled.div`\n  width: fit-content;\n  display: flex;\n  align-items: center;\n  font-size: 1.7rem;\n  gap: 2rem;\n  margin: 0.5rem 1rem;\n  padding: 2rem 1rem;\n  white-space: nowrap;\n  overflow-x: auto;\n\n  @media screen and (max-width: 767px) and (orientation: portrait) {\n    gap: 1.5rem;\n    font-size: 1.5rem;\n  }\n`;\n\nconst CategoryItem = styled.div`\n  color: ${LIGHT_COLOR.gray};\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { PostFrontmatterType } from 'types/postItem';\nimport { Link } from 'gatsby';\nimport { LIGHT_COLOR } from 'utils/color';\n\ninterface PostItemProps extends PostFrontmatterType {\n  link: string;\n}\n\nconst PostItem = ({\n  title,\n  date,\n  categories,\n  summary,\n  link,\n}: PostItemProps) => {\n  return (\n    <PostItemContent to={link}>\n      <Title>{title}</Title>\n      <Summary>{summary}</Summary>\n      <Date>{date}</Date>\n      <Category>\n        {categories.tags.map(category => (\n          <CategoryItem key={category}>{category}</CategoryItem>\n        ))}\n      </Category>\n    </PostItemContent>\n  );\n};\n\nexport default PostItem;\n\nconst PostItemContent = styled(Link)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  padding: 2.6rem 3rem;\n  border-radius: 1.5rem;\n  margin: 0.5rem 0;\n  transition: 0.3s ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 0px 20px rgba(33, 134, 250, 0.08);\n\n    & > h1 {\n      color: ${LIGHT_COLOR.main};\n      transition: inherit;\n    }\n  }\n\n  &:active {\n    transition: linear;\n    box-shadow: 0 0 1.2px rgba(33, 134, 250, 0.7);\n\n    & > h1 {\n      color: ${LIGHT_COLOR.deepBlue};\n      transition: inherit;\n    }\n  }\n\n  @media screen and (max-width: 767px) and (orientation: portrait) {\n    &:hover {\n      box-shadow: none;\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  display: -webkit-box;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 2.5rem;\n  font-weight: 700;\n  line-height: 3.4rem;\n  margin-top: 0.2rem;\n`;\n\nconst Summary = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-top: auto;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 1.6rem;\n  line-height: 2.4rem;\n  opacity: 0.8;\n`;\n\nconst Date = styled.div`\n  font-size: 1.5rem;\n  font-weight: 400;\n  color: ${LIGHT_COLOR.gray};\n`;\n\nconst Category = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1.2rem;\n`;\n\nconst CategoryItem = styled.div`\n  padding: 0.8rem 1.4rem;\n  font-weight: 500;\n  font-size: 1.3rem;\n  background-color: ${LIGHT_COLOR.opacityBlue};\n  color: ${LIGHT_COLOR.main};\n  border-radius: 2rem;\n  margin-top: 0.8rem;\n`;\n","import { MutableRefObject, useState, useMemo, useRef, useEffect } from 'react';\nimport { PostListItemType } from 'types/postItem';\n\nexport interface useInfinitieScrollType {\n  containerRef: MutableRefObject<HTMLDivElement | null>;\n  postList: PostListItemType[];\n}\n\nconst NUMBER_OF_ITEMS_PER_PAGE = 10;\n\nconst useInfiniteScroll = (\n  selectedCategory: string,\n  posts: PostListItemType[],\n): useInfinitieScrollType => {\n  const containerRef: MutableRefObject<HTMLDivElement | null> =\n    useRef<HTMLDivElement>(null);\n  const observer: MutableRefObject<IntersectionObserver | null> =\n    useRef<IntersectionObserver>(null);\n  const [count, setCount] = useState<number>(1);\n\n  const postListByCategory = useMemo<PostListItemType[]>(\n    () =>\n      posts.filter(\n        ({\n          node: {\n            frontmatter: {\n              categories: { type },\n            },\n          },\n        }: PostListItemType) =>\n          selectedCategory !== 'All' ? type.includes(selectedCategory) : true,\n      ),\n    [selectedCategory],\n  );\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver((entries, observer) => {\n      if (!entries[0].isIntersecting) return;\n\n      setCount(value => value + 1);\n      observer.disconnect();\n    });\n  }, []);\n\n  useEffect(() => {\n    setCount(1);\n  }, [selectedCategory]);\n\n  useEffect(() => {\n    if (\n      NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\n      containerRef.current === null ||\n      containerRef.current.children.length === 0 ||\n      observer.current === null\n    )\n      return;\n\n    const childNodes = containerRef.current.children;\n    observer.current.observe(childNodes[childNodes.length - 1]);\n  }, [count, selectedCategory]);\n\n  return {\n    containerRef,\n    postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\n  };\n};\n\nexport default useInfiniteScroll;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PostItem from './PostItem';\nimport { PostListItemType } from 'types/postItem';\nimport useInfiniteScroll, {\n  useInfinitieScrollType,\n} from 'hooks/useInfiniteScroll';\n\ninterface PostListProps {\n  selectedCategory: string;\n  posts: PostListItemType[];\n}\n\nconst PostList = ({ selectedCategory, posts }: PostListProps) => {\n  const { containerRef, postList }: useInfinitieScrollType = useInfiniteScroll(\n    selectedCategory,\n    posts,\n  );\n\n  return (\n    <PostListWrapper ref={containerRef}>\n      {postList.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            frontmatter,\n          },\n        }: PostListItemType) => (\n          <PostItem {...frontmatter} link={slug} key={id} />\n        ),\n      )}\n    </PostListWrapper>\n  );\n};\n\nexport default PostList;\n\nconst PostListWrapper = styled.div`\n  margin-bottom: 3rem;\n`;\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n","import React, { useMemo } from 'react';\nimport Template from 'components/common/Template';\nimport CategoryList from 'components/main/CategoryList';\nimport PostList from 'components/main/PostList';\nimport { graphql } from 'gatsby';\nimport { PostListItemType } from 'types/postItem';\nimport queryString, { ParsedQuery } from 'query-string';\nimport { CategoryListProps } from '../components/main/CategoryList';\nimport styled from '@emotion/styled';\n\ninterface IndexPageProps {\n  location: {\n    search: string;\n  };\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n        siteUrl: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: PostListItemType[];\n    };\n  };\n}\n\nconst IndexPage = ({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges },\n  },\n}: IndexPageProps) => {\n  const parsed: ParsedQuery<string> = queryString.parse(search);\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category;\n\n  const categoryList = useMemo(\n    () =>\n      edges.reduce(\n        (\n          list: CategoryListProps['categoryList'],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: PostListItemType,\n        ) => {\n          categories.type.forEach(category => {\n            list[category] =\n              list[category] === undefined ? 1 : list[category] + 1;\n          });\n\n          list['All'] += 1;\n\n          return list;\n        },\n        { All: 0 },\n      ),\n    [],\n  );\n\n  return (\n    <Template title={title} description={description} url={siteUrl}>\n      <Container>\n        <CategoryList\n          selectedCategory={selectedCategory}\n          categoryList={categoryList}\n        />\n        <PostList selectedCategory={selectedCategory} posts={edges} />\n      </Container>\n    </Template>\n  );\n};\n\nexport default IndexPage;\n\nconst Container = styled.div`\n  width: 54%;\n  margin: 0 auto;\n  padding-top: 3rem;\n\n  @media screen and (max-width: 767px) and (orientation: portrait) {\n    width: 95%;\n    padding-top: 0.5rem;\n  }\n`;\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY.MM.DD\")\n            summary\n            categories {\n              type\n              tags\n            }\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","selectedCategory","categoryList","___EmotionJSX","Container","Wrapper","Object","entries","map","_ref2","name","count","CategoryItem","LinkButton","to","encodeURI","active","key","LIGHT_COLOR","title","date","categories","summary","link","PostItemContent","Title","Summary","Date","Category","tags","category","_styled","Link","posts","containerRef","useRef","observer","setCount","useState","postListByCategory","useMemo","filter","node","frontmatter","type","includes","useEffect","current","IntersectionObserver","isIntersecting","value","disconnect","length","children","childNodes","observe","postList","slice","useInfiniteScroll","PostListWrapper","ref","id","fields","slug","PostItem","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","left","right","Array","prototype","concat","call","decode","input","tokens","match","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","keys","replace","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","encodeURIComponent","x","charCodeAt","toString","toUpperCase","keysSorter","sort","a","b","Number","removeHash","hashStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","isEncodedArray","newValue","item","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","reduce","Boolean","stringify","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryString","getHash","urlObjectForFragmentEncode","URL","pick","exclude","location","search","data","site","siteMetadata","description","siteUrl","allMarkdownRemark","edges","parsed","list","forEach","All","Template","CategoryList","PostList","target","styles"],"sourceRoot":""}